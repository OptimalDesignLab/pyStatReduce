################################################################################
# plot_determ_vs_uq_trajectory.py
#
# The following file plots the difference between the determinsitic and mean
# statistics, as well as the deterministic and standard deviations
#
################################################################################

import numpy as np
from mpl_toolkits import mplot3d
import matplotlib
import matplotlib.pyplot as plt

#---------------------------Deterministic--------------------------------------#
altitude_determ = np.array([  100.        ,   100.        ,   164.0557643 ,   218.11824534,   218.11824534,   594.87366893,  1884.81580942,  2500.06507343,
        2500.06507343,  3873.1995597 ,  5540.24615145,  5960.08519216,  5960.08519216,  6887.76706542,  8020.52078944,  8337.99144103,
        8337.99144103,  8804.73183899,  8791.21435824,  8607.8540786 ,  8607.8540786 ,  8063.55369594,  7333.01653081,  7194.34561926,
        7194.34561926,  7036.90966352,  7100.51166151,  7160.9019215 ,  7160.9019215 ,  7337.32623784,  7621.40509094,  7710.9464599 ,
        7710.9464599 ,  7914.46736459,  8185.63625057,  8268.88773658,  8268.88773658,  8456.13966968,  8699.65906157,  8771.14526332,
        8771.14526332,  8913.56513682,  9047.59333244,  9071.30566043,  9071.30566043,  9091.13009621,  9181.87442526,  9267.26464136,
        9267.26464136,  9758.6687448 , 11245.96312222, 11943.03478097, 11943.03478097, 13766.11714855, 16424.42017061, 17194.76290022,
       17194.76290022, 18705.88879153, 19906.99495105, 20000.        ])

alpha_determ = np.array([ 5.25785332,  3.15857677,  2.00379171,  2.05909018,  2.05909018,  2.19830428,  1.67107988,  1.33044273,  1.33044273,  0.75856589,  0.96709622,
        1.27409807,  1.27409807,  1.79404552,  1.4747259 ,  1.12320475,  1.12320475,  0.51909079,  0.79774599,  1.15462871,  1.15462871,  1.88423632,
        2.11754006,  2.00453926,  2.00453926,  1.69028129,  1.41218237,  1.36173408,  1.36173408,  1.28425648,  1.23436256,  1.23234371,  1.23234371,
        1.23633828,  1.2452507 ,  1.24889301,  1.24889301,  1.25024481,  1.22767657,  1.21463112,  1.21463112,  1.18368179,  1.14811301,  1.13857929,
        1.13857929,  1.22174169,  1.67813361,  1.90511518,  1.90511518,  2.48276626,  3.32068814,  3.59576372,  3.59576372,  3.93637717,  3.43860696,
        3.04727443,  3.04727443,  1.07224358, -4.77305466, -7.37684459])

tseries_deterministic = np.array([  0.        ,   7.65193556,  18.21004486,  21.55165035,  21.55165035,  29.20358591,  39.76169521,  43.1033007 ,  43.1033007 ,  50.75523626,
                            61.31334556,  64.65495105,  64.65495105,  72.30688661,  82.86499591,  86.2066014 ,  86.2066014 ,  93.85853696, 104.41664626, 107.75825175,
                           107.75825175, 115.41018731, 125.96829661, 129.3099021 , 129.3099021 , 136.96183766, 147.51994695, 150.86155245, 150.86155245, 158.51348801,
                           169.0715973 , 172.4132028 , 172.4132028 , 180.06513836, 190.62324765, 193.96485315, 193.96485315, 201.61678871, 212.174898  , 215.5165035 ,
                           215.5165035 , 223.16843906, 233.72654835, 237.06815385, 237.06815385, 244.72008941, 255.2781987 , 258.6198042 , 258.6198042 , 266.27173976,
                           276.82984905, 280.17145455, 280.17145455, 287.82339011, 298.3814994 , 301.7231049 , 301.7231049 , 309.37504046, 319.93314975, 323.27475524])

#-----------------------------Stochastic---------------------------------------#

# Altitude
mean_altitude_10K = np.array([  100.              ,   100.09254282840851,   163.69420056672226,   217.21918176074075,   217.21918176074075,   596.1603948064635 ,
                              1894.1922519703623 ,  2511.222508734834  ,  2511.222508734834  ,  3884.5460677882143 ,  5541.871145973126  ,  5956.595252714979  ,
                              5956.595252714979  ,  6878.101521271197  ,  8020.72514229374   ,  8347.081905770814  ,  8347.081905770814  ,  8841.912933032869  ,
                              8883.811619503866  ,  8720.786744282337  ,  8720.786744282337  ,  8211.664760062786  ,  7478.662032656129  ,  7320.761087050675  ,
                              7320.761087050675  ,  7111.204804785298  ,  7114.4762662928115 ,  7167.143849396077  ,  7167.143849396077  ,  7335.4547416933965 ,
                              7620.879245442592  ,  7710.366816870834  ,  7710.366816870834  ,  7914.628711018853  ,  8187.907334469     ,  8272.322598833962  ,
                              8272.322598833962  ,  8461.972201598557  ,  8706.969049949063  ,  8778.122195458167  ,  8778.122195458167  ,  8918.850410902785  ,
                              9050.725161554092  ,  9074.483392987508  ,  9074.483392987508  ,  9098.82549552336   ,  9208.85883814711   ,  9304.174796448438  ,
                              9304.174796448438  ,  9820.533855462409  , 11332.613607641506  , 12031.32903117049   , 12031.32903117049   , 13847.107144568994  ,
                             16478.224124015782  , 17238.162571234407  , 17238.162571234407  , 18727.1652700947    , 19908.69382106188   , 20000.              ])

var_altitude_10K = np.array([     0.              ,     42.81681429972951,   1805.0156677182683 ,   4866.487221417509  ,   4866.487221417509  ,   9722.167405978193  ,
                            14770.115755739764  ,  13971.475084220718  ,  13971.475084220718  ,  17969.279263899934  ,  21455.692176641285  ,  21214.653648778898  ,
                            21214.653648778898  ,  22061.495707158883  ,  23708.48272737847   ,  27315.918814087017  ,  27315.918814087017  ,  45306.32605885872   ,
                            78756.4023971241    ,  86921.72007206157   ,  86921.72007206157   , 104661.98455505981   ,  80508.55612811005   ,  57119.24552635571   ,
                            57119.24552635571   ,  16058.485139187002  ,   2426.9796122436132 ,   3135.385854957751  ,   3135.385854957751  ,   4711.738777503471  ,
                             5221.727671068422  ,   5476.1904407078755 ,   5476.1904407078755 ,   5796.055424474805  ,   5995.888807169035  ,   5991.966722863935  ,
                             5991.966722863935  ,   6137.319424182945  ,   7032.30659249989   ,   7539.919902788893  ,   7539.919902788893  ,   8784.17562440984   ,
                            10908.618842703978  ,  11630.510040769923  ,  11630.510040769923  ,  12966.443574095629  ,  19234.31128938341   ,  25666.82347200367   ,
                            25666.82347200367   ,  56782.99424899899   , 129385.28469401892   , 145016.42113917047   , 145016.42113917047   , 142111.38557444233   ,
                            73759.34286589849   ,  49522.291841250015  ,  49522.291841250015  ,  12038.934967218602  ,     77.97100665601563,      0.              ])


# Angle of Attack
mean_alpha_10K = np.array([ 5.311905201653525 ,  3.1866601253496634,  2.0158881706158738,  2.0709208854103895,  2.07092088541039  ,  2.208550354650694 ,
                            1.6672683501950574,  1.3193141711517815,  1.3193141711517842,  0.7382940445647114,  0.9643875061427143,  1.2842387148092327,
                            1.284238714809228 ,  1.8328181851528942,  1.5372259838922606,  1.1894025954341456,  1.1894025954341443,  0.5781880167521574,
                            0.8028165994674877,  1.1319151085331594,  1.131915108533157 ,  1.818282364023192 ,  2.0781673098276423,  1.9944143486538701,
                            1.994414348653877 ,  1.7377619944963874,  1.4707199976188174,  1.4072404641343894,  1.407240464134382 ,  1.2985733080647277,
                            1.231095602250068 ,  1.229660150686617 ,  1.2296601506866234,  1.237006174266261 ,  1.246046570410966 ,  1.2486431439348504,
                            1.2486431439348418,  1.2476859898995734,  1.2241767141692852,  1.2113757511204395,  1.2113757511204468,  1.1827079945939465,
                            1.1549605288552638,  1.1490311918323175,  1.149031191832302 ,  1.2395745297781653,  1.701244043773008 ,  1.9287106246708434,
                            1.9287106246708527,  2.5018365778986773,  3.317151710219753 ,  3.5811193311412985,  3.581119331141287 ,  3.913122377060001 ,
                            3.4658666887746157,  3.1055953552304087,  3.105595355230407 ,  1.2148757331766002, -4.498045868002808 , -7.056063024905327 ])

var_alpha_10K = np.array([0.3621483329982609, 0.0959891972061549, 0.0645999023198681, 0.0404996272502529, 0.0404996272502529, 0.0299572881740925, 0.0177053518269535,
                          0.0083881406692961, 0.0083881406692961, 0.0103623678689945, 0.0040002748949072, 0.00517616619071  , 0.00517616619071  , 0.0296537518637202,
                          0.0238474240371561, 0.0137625230561973, 0.013762523056197 , 0.0095012057907632, 0.0079203162218128, 0.0091406869527285, 0.0091406869527284,
                          0.021084003096028 , 0.0099103255229292, 0.0048413001297377, 0.0048413001297377, 0.013935918837637 , 0.0163385484898063, 0.0099094900877827,
                          0.0099094900877826, 0.0013502477543114, 0.0003118137111574, 0.0002729539422236, 0.0002729539422236, 0.0003587571339765, 0.0003564466382639,
                          0.000405478768305 , 0.0004054787683049, 0.0007147601590838, 0.0006044434843791, 0.0005948526419855, 0.0005948526419855, 0.0008789810528989,
                          0.001229240635557 , 0.0018913754049372, 0.0018913754049372, 0.0046516037893642, 0.0121349789757007, 0.0179776971935193, 0.0179776971935193,
                          0.0230748185485437, 0.0203973723494963, 0.0489496240210475, 0.0489496240210478, 0.1201284650273272, 0.0526712602043189, 0.0920716719797885,
                          0.0920716719797887, 0.5075167956635765, 1.8288522503145603, 2.5048492133268137])

time_series = np.array([  0.        ,   7.65193556,  18.21004486,  21.55165035,  21.55165035,  29.20358591,  39.76169521,  43.1033007 ,  43.1033007 ,  50.75523626,
                        61.31334556,  64.65495105,  64.65495105,  72.30688661,  82.86499591,  86.2066014 ,  86.2066014 ,  93.85853696, 104.41664626, 107.75825175,
                       107.75825175, 115.41018731, 125.96829661, 129.3099021 , 129.3099021 , 136.96183766, 147.51994695, 150.86155245, 150.86155245, 158.51348801,
                       169.0715973 , 172.4132028 , 172.4132028 , 180.06513836, 190.62324765, 193.96485315, 193.96485315, 201.61678871, 212.174898  , 215.5165035 ,
                       215.5165035 , 223.16843906, 233.72654835, 237.06815385, 237.06815385, 244.72008941, 255.2781987 , 258.6198042 , 258.6198042 , 266.27173976,
                       276.82984905, 280.17145455, 280.17145455, 287.82339011, 298.3814994 , 301.7231049 , 301.7231049 , 309.37504046, 319.93314975, 323.27475524])

std_dev_h_uq = np.sqrt(var_altitude_10K)
std_dev_aoa_uq = np.sqrt(var_alpha_10K)

positive_dev_alt_uq = mean_altitude_10K + 2*std_dev_h_uq
negative_dev_alt_uq = mean_altitude_10K - 2*std_dev_h_uq

positive_dev_alpha_uq = mean_alpha_10K + 2*std_dev_aoa_uq
negative_dev_alpha_uq = mean_alpha_10K - 2*std_dev_aoa_uq

err_mean_alt = mean_altitude_10K - altitude_determ
err_mean_aoa = mean_alpha_10K - alpha_determ

err_pos_dev_alt = positive_dev_alt_uq - altitude_determ
err_neg_dev_alt = negative_dev_alt_uq - altitude_determ

err_pos_dev_aoa = positive_dev_alpha_uq - alpha_determ
err_neg_dev_aoa = negative_dev_alpha_uq - alpha_determ

# Use the above data to get the necessary stuff.
normalized_t_determ = tseries_deterministic / tseries_deterministic[-1]
normalized_t_uq = time_series / time_series[-1]

print('time delta = \n', normalized_t_uq / normalized_t_uq)

fname = 'uq_vs_determ_schedule.pdf'
matplotlib.rcParams['mathtext.fontset'] = 'cm'
fig, axes = plt.subplots(nrows=2, figsize=(10,8))
p1 = axes[0].plot(normalized_t_uq, err_mean_alt, label='mean difference')
p2 = axes[0].plot(normalized_t_uq, err_pos_dev_alt, label=r'difference at $+2\sigma$')
p3 = axes[0].plot(normalized_t_uq, err_neg_dev_alt, label=r'difference at $-2\sigma$')
axes[0].set_ylabel(r'altitude $(m)$')
axes[0].legend()
axes[0].set_xticks(np.arange(1.1, step=0.1))
axes[0].grid(True)
plt.tight_layout()
p4 = axes[1].plot(normalized_t_uq, err_mean_aoa, label='mean difference')
p5 = axes[1].plot(normalized_t_uq, err_pos_dev_aoa, label=r'difference at $+2\sigma$')
p6 = axes[1].plot(normalized_t_uq, err_neg_dev_aoa, label=r'difference at $-2\sigma$')
axes[1].set_ylabel(r'angle of attack, $\alpha$ $(^{\circ})$')
axes[1].legend()
axes[1].set_xlabel(r'normalized time')
plt.xticks(np.arange(1.1, step=0.1))
plt.tight_layout()
plt.grid(True)
# plt.show()
plt.savefig(fname, format='pdf')
