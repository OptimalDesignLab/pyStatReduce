################################################################################
# plot_schedule_statistics.py
#
# The following file plots the mean altitude and angle of attach, and the
# corresponding 'n' standard deviations as required by the user.
#
################################################################################

import numpy as np
from mpl_toolkits import mplot3d
import matplotlib
import matplotlib.pyplot as plt

mean_altitude = np.array([  100.              ,    99.9999999986391 ,   164.21459741688284,   218.4111321618833 ,   598.2115264671982 ,  1895.941102622737  ,
        2512.9392036751838 ,  3886.88794638799   ,  5544.458435582448  ,  5958.8240154363875 ,  6879.786399784747  ,  8021.862951562714  ,
        8348.204048752797  ,  8843.020450435066  ,  8884.316661760735  ,  8720.807714029377  ,  8210.881797884223  ,  7477.256582036866  ,
        7319.361886492273  ,  7110.13333047747   ,  7114.377149436271  ,  7167.309239917131  ,  7335.977844025447  ,  7621.678303570402  ,
        7711.242275207637  ,  7915.825489827271  ,  8189.526379198583  ,  8274.027521515683  ,  8463.605708401188  ,  8708.297135128129  ,
        8779.359565842187  ,  8920.014628864403  ,  9052.447511314074  ,  9076.55012671509   ,  9101.18394858514   ,  9210.483574800513  ,
        9305.382347786288  ,  9822.05303124682   , 11335.920356326178  , 12035.067208656114  , 13850.687002971712  , 16481.058334790825  ,
       17240.758136499542  , 18728.67315643168   , 19908.83997021348   , 20000.])

var_altitude = np.array([     0.              ,      0.              ,   1179.0602242828381 ,   4009.161280486053  ,   9061.84221682607   ,  15797.760522650735  ,
        14954.822934810878  ,  16419.95066828179   ,  18957.002033076053  ,  20662.766264089805  ,  23452.544266579294  ,  26497.105806317486  ,
        29427.15499900616   ,  43120.164823069135  ,  75318.48649652912   ,  86577.98478912437   , 106300.98798966597   ,  81162.2431269176    ,
        57608.62886186855   ,  16561.385056595955  ,   2840.203379343861  ,   3469.543168956175  ,   4960.789164891496  ,   5552.716750886769  ,
         5852.809955495954  ,   6171.946451087403  ,   6215.077946265349  ,   6171.141294694497  ,   6385.442423420768  ,   7702.720504111977  ,
         8433.87317025979   ,   9561.396018095766  ,  11648.874733532371  ,  12803.20186646053   ,  14278.301745522715  ,  18971.656460300455  ,
        26560.723117478752  ,  67454.8121420032    , 157411.08605207634   , 174208.60096119877   , 169384.69430797015   ,  87293.50046632756   ,
        58285.051112236986  ,  14058.686389130517  ,     90.90906113850166,      0.              ])

mean_alpha = np.array([ 5.307782175109678 ,  3.184152211176628 ,  2.015854077795196 ,  2.0717290075785515,  2.210644783445652 ,  1.6689214879660086,
        1.3202922651446964,  0.7379750645010218,  0.9640632782369999,  1.2843439162161236,  1.8337934474254398,  1.5382504846039458,
        1.1901645547570012,  0.5784086854439023,  0.8029898544103198,  1.1322423331064908,  1.8188516684022642,  2.0784023568745393,
        1.9943821607003462,  1.7372231862085161,  1.470119828132157 ,  1.4067749237448501,  1.298400183577683 ,  1.2309953659598702,
        1.2295031197429682,  1.236677552600087 ,  1.2454891642641654,  1.2480152550633474,  1.2470605795761378,  1.2240893519333254,
        1.211587835612498 ,  1.1833152287293223,  1.1549254476815471,  1.1485059319362503,  1.2384618355819987,  1.7015962355562366,
        1.9300761488249765,  2.5038988583247406,  3.313850151742064 ,  3.5745920789870778,  3.9019781802742624,  3.4602085117617856,
        3.1045377878273537,  1.2245121729336261, -4.478309243264165 ])

var_alpha = np.array([0.3620182669028474, 0.0917549117991791, 0.065850264168509 , 0.0407571920866904, 0.0246124570642495, 0.0164536385648708, 0.0087267023088619,
       0.0075867040656801, 0.004075855325154 , 0.0049882729881254, 0.0205588407948619, 0.0185421867130081, 0.0125190856637999, 0.0083702136672477,
       0.006967755412782 , 0.0091128385147114, 0.0190563611081809, 0.007754286014058 , 0.0039258659824825, 0.0139494592189364, 0.0161468829476582,
       0.0098873273479922, 0.0015008868062351, 0.0003579802417981, 0.0003025271162759, 0.0003785407174021, 0.0003823735523336, 0.0004875066795595,
       0.0009123903590274, 0.0006388482825481, 0.0007186993347161, 0.0012907481894554, 0.0012910972652409, 0.0026912236474828, 0.0084372563643834,
       0.0165444160501529, 0.0234015668465334, 0.0299287572478873, 0.0223101354458012, 0.0596499453639815, 0.1574226471356044, 0.0567077319027445,
       0.0972384455962883, 0.6051926539126342, 2.14771098533253  ])

time_series = np.array([  0.        ,   7.65193556,  18.21004486,  21.55165035,  21.55165035,  29.20358591,  39.76169521,  43.1033007 ,  43.1033007 ,  50.75523626,
        61.31334556,  64.65495105,  64.65495105,  72.30688661,  82.86499591,  86.2066014 ,  86.2066014 ,  93.85853696, 104.41664626, 107.75825175,
       107.75825175, 115.41018731, 125.96829661, 129.3099021 , 129.3099021 , 136.96183766, 147.51994695, 150.86155245, 150.86155245, 158.51348801,
       169.0715973 , 172.4132028 , 172.4132028 , 180.06513836, 190.62324765, 193.96485315, 193.96485315, 201.61678871, 212.174898  , 215.5165035 ,
       215.5165035 , 223.16843906, 233.72654835, 237.06815385, 237.06815385, 244.72008941, 255.2781987 , 258.6198042 , 258.6198042 , 266.27173976,
       276.82984905, 280.17145455, 280.17145455, 287.82339011, 298.3814994 , 301.7231049 , 301.7231049 , 309.37504046, 319.93314975, 323.27475524])

# Compute the standard deviations
std_dev_altitude = np.sqrt(var_altitude)
std_dev_alpha = np.sqrt(var_alpha)

print(std_dev_altitude.size)
print(std_dev_alpha.size)
