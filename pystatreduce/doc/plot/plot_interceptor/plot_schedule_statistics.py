################################################################################
# plot_schedule_statistics.py
#
# The following file plots the mean altitude and angle of attach, and the
# corresponding 'n' standard deviations as required by the user.
#
################################################################################

import numpy as np
from mpl_toolkits import mplot3d
import matplotlib
import matplotlib.pyplot as plt

# ALTITUDE HISTORY
mean_altitude_5K = np.array([  100.              ,    99.9999999986391 ,   164.21459741688284,   218.4111321618833 ,   218.4111321618833 ,   598.2115264671982 ,
        1895.941102622737  ,  2512.9392036751838 ,  2512.9392036751838 ,  3886.88794638799   ,  5544.458435582448  ,  5958.8240154363875 ,
        5958.8240154363875 ,  6879.786399784747  ,  8021.862951562714  ,  8348.204048752797  ,  8348.204048752797  ,  8843.020450435066  ,
        8884.316661760735  ,  8720.807714029377  ,  8720.807714029377  ,  8210.881797884223  ,  7477.256582036866  ,  7319.361886492273  ,
        7319.361886492273  ,  7110.13333047747   ,  7114.377149436271  ,  7167.309239917131  ,  7167.309239917131  ,  7335.977844025447  ,
        7621.678303570402  ,  7711.242275207637  ,  7711.242275207637  ,  7915.825489827271  ,  8189.526379198583  ,  8274.027521515683  ,
        8274.027521515683  ,  8463.605708401188  ,  8708.297135128129  ,  8779.359565842187  ,  8779.359565842187  ,  8920.014628864403  ,
        9052.447511314074  ,  9076.55012671509   ,  9076.55012671509   ,  9101.18394858514   ,  9210.483574800513  ,  9305.382347786288  ,
        9305.382347786288  ,  9822.05303124682   , 11335.920356326178  , 12035.067208656114  , 12035.067208656114  , 13850.687002971712  ,
       16481.058334790825  , 17240.758136499542  , 17240.758136499542  , 18728.67315643168   , 19908.83997021348   , 20000.              ])

var_altitude_5K = np.array([     0.              ,      0.              ,   1179.0602242828381 ,   4009.161280486053  ,   4009.161280486053  ,   9061.84221682607   ,
        15797.760522650735  ,  14954.822934810878  ,  14954.822934810878  ,  16419.95066828179   ,  18957.002033076053  ,  20662.766264089805  ,
        20662.766264089805  ,  23452.544266579294  ,  26497.105806317486  ,  29427.15499900616   ,  29427.15499900616   ,  43120.164823069135  ,
        75318.48649652912   ,  86577.98478912437   ,  86577.98478912437   , 106300.98798966597   ,  81162.2431269176    ,  57608.62886186855   ,
        57608.62886186855   ,  16561.385056595955  ,   2840.203379343861  ,   3469.543168956175  ,   3469.543168956175  ,   4960.789164891496  ,
         5552.716750886769  ,   5852.809955495954  ,   5852.809955495954  ,   6171.946451087403  ,   6215.077946265349  ,   6171.141294694497  ,
         6171.141294694497  ,   6385.442423420768  ,   7702.720504111977  ,   8433.87317025979   ,   8433.87317025979   ,   9561.396018095766  ,
        11648.874733532371  ,  12803.20186646053   ,  12803.20186646053   ,  14278.301745522715  ,  18971.656460300455  ,  26560.723117478752  ,
        26560.723117478752  ,  67454.8121420032    , 157411.08605207634   , 174208.60096119877   , 174208.60096119877   , 169384.69430797015   ,
        87293.50046632756   ,  58285.051112236986  ,  58285.051112236986  ,  14058.686389130517  ,     90.90906113850166,      0.              ])

mean_altitude_10K = np.array([  100.              ,   100.09254282840851,   163.69420056672226,   217.21918176074075,   217.21918176074075,   596.1603948064635 ,
      1894.1922519703623 ,  2511.222508734834  ,  2511.222508734834  ,  3884.5460677882143 ,  5541.871145973126  ,  5956.595252714979  ,
      5956.595252714979  ,  6878.101521271197  ,  8020.72514229374   ,  8347.081905770814  ,  8347.081905770814  ,  8841.912933032869  ,
      8883.811619503866  ,  8720.786744282337  ,  8720.786744282337  ,  8211.664760062786  ,  7478.662032656129  ,  7320.761087050675  ,
      7320.761087050675  ,  7111.204804785298  ,  7114.4762662928115 ,  7167.143849396077  ,  7167.143849396077  ,  7335.4547416933965 ,
      7620.879245442592  ,  7710.366816870834  ,  7710.366816870834  ,  7914.628711018853  ,  8187.907334469     ,  8272.322598833962  ,
      8272.322598833962  ,  8461.972201598557  ,  8706.969049949063  ,  8778.122195458167  ,  8778.122195458167  ,  8918.850410902785  ,
      9050.725161554092  ,  9074.483392987508  ,  9074.483392987508  ,  9098.82549552336   ,  9208.85883814711   ,  9304.174796448438  ,
      9304.174796448438  ,  9820.533855462409  , 11332.613607641506  , 12031.32903117049   , 12031.32903117049   , 13847.107144568994  ,
     16478.224124015782  , 17238.162571234407  , 17238.162571234407  , 18727.1652700947    , 19908.69382106188   , 20000.              ])

var_altitude_10K = np.array([     0.              ,     42.81681429972951,   1805.0156677182683 ,   4866.487221417509  ,   4866.487221417509  ,   9722.167405978193  ,
        14770.115755739764  ,  13971.475084220718  ,  13971.475084220718  ,  17969.279263899934  ,  21455.692176641285  ,  21214.653648778898  ,
        21214.653648778898  ,  22061.495707158883  ,  23708.48272737847   ,  27315.918814087017  ,  27315.918814087017  ,  45306.32605885872   ,
        78756.4023971241    ,  86921.72007206157   ,  86921.72007206157   , 104661.98455505981   ,  80508.55612811005   ,  57119.24552635571   ,
        57119.24552635571   ,  16058.485139187002  ,   2426.9796122436132 ,   3135.385854957751  ,   3135.385854957751  ,   4711.738777503471  ,
         5221.727671068422  ,   5476.1904407078755 ,   5476.1904407078755 ,   5796.055424474805  ,   5995.888807169035  ,   5991.966722863935  ,
         5991.966722863935  ,   6137.319424182945  ,   7032.30659249989   ,   7539.919902788893  ,   7539.919902788893  ,   8784.17562440984   ,
        10908.618842703978  ,  11630.510040769923  ,  11630.510040769923  ,  12966.443574095629  ,  19234.31128938341   ,  25666.82347200367   ,
        25666.82347200367   ,  56782.99424899899   , 129385.28469401892   , 145016.42113917047   , 145016.42113917047   , 142111.38557444233   ,
        73759.34286589849   ,  49522.291841250015  ,  49522.291841250015  ,  12038.934967218602  ,     77.97100665601563,      0.              ])

# ANGLE OF ATTACK HISTORY
mean_alpha_5K = np.array([ 5.307782175109678 ,  3.184152211176627 ,  2.015854077795196 ,  2.0717290075785515,  2.0717290075785515,  2.210644783445652 ,
        1.6689214879660088,  1.3202922651446969,  1.3202922651446964,  0.7379750645010218,  0.9640632782370001,  1.284343916216125 ,
        1.2843439162161236,  1.8337934474254398,  1.5382504846039462,  1.190164554757004 ,  1.1901645547570012,  0.5784086854439023,
        0.8029898544103202,  1.132242333106493 ,  1.1322423331064908,  1.8188516684022642,  2.0784023568745393,  1.9943821607003442,
        1.9943821607003462,  1.737223186208516 ,  1.4701198281321575,  1.406774923744856 ,  1.4067749237448501,  1.298400183577683 ,
        1.2309953659598705,  1.2295031197429644,  1.2295031197429682,  1.2366775526000868,  1.2454891642641654,  1.2480152550633508,
        1.2480152550633474,  1.2470605795761376,  1.2240893519333254,  1.2115878356124972,  1.211587835612498 ,  1.1833152287293218,
        1.1549254476815474,  1.1485059319362596,  1.1485059319362503,  1.2384618355819983,  1.7015962355562368,  1.9300761488249671,
        1.9300761488249765,  2.50389885832474  ,  3.313850151742064 ,  3.574592078987086 ,  3.5745920789870778,  3.901978180274262 ,
        3.4602085117617856,  3.104537787827352 ,  3.1045377878273537,  1.2245121729336261, -4.4783092432641665, -7.034254376118108 ])

var_alpha_5K = np.array([0.3620182669028474, 0.091754911799179 , 0.065850264168509 , 0.0407571920866907, 0.0407571920866904, 0.0246124570642495, 0.0164536385648708,
       0.0087267023088618, 0.0087267023088619, 0.0075867040656801, 0.004075855325154 , 0.0049882729881252, 0.0049882729881254, 0.0205588407948619,
       0.0185421867130082, 0.0125190856638001, 0.0125190856637999, 0.0083702136672477, 0.006967755412782 , 0.0091128385147119, 0.0091128385147114,
       0.0190563611081809, 0.007754286014058 , 0.0039258659824824, 0.0039258659824825, 0.0139494592189364, 0.0161468829476582, 0.0098873273479924,
       0.0098873273479922, 0.0015008868062351, 0.0003579802417981, 0.0003025271162759, 0.0003025271162759, 0.0003785407174021, 0.0003823735523336,
       0.0004875066795595, 0.0004875066795595, 0.0009123903590274, 0.0006388482825481, 0.0007186993347161, 0.0007186993347161, 0.0012907481894554,
       0.0012910972652409, 0.0026912236474827, 0.0026912236474828, 0.0084372563643834, 0.0165444160501528, 0.0234015668465344, 0.0234015668465334,
       0.0299287572478873, 0.0223101354458013, 0.0596499453639823, 0.0596499453639815, 0.1574226471356042, 0.0567077319027446, 0.0972384455962871,
       0.0972384455962883, 0.6051926539126342, 2.147710985332534 , 2.896228282578803 ])

mean_alpha_10K = np.array([ 5.311905201653525 ,  3.1866601253496634,  2.0158881706158738,  2.0709208854103895,  2.07092088541039  ,  2.208550354650694 ,
        1.6672683501950574,  1.3193141711517815,  1.3193141711517842,  0.7382940445647114,  0.9643875061427143,  1.2842387148092327,
        1.284238714809228 ,  1.8328181851528942,  1.5372259838922606,  1.1894025954341456,  1.1894025954341443,  0.5781880167521574,
        0.8028165994674877,  1.1319151085331594,  1.131915108533157 ,  1.818282364023192 ,  2.0781673098276423,  1.9944143486538701,
        1.994414348653877 ,  1.7377619944963874,  1.4707199976188174,  1.4072404641343894,  1.407240464134382 ,  1.2985733080647277,
        1.231095602250068 ,  1.229660150686617 ,  1.2296601506866234,  1.237006174266261 ,  1.246046570410966 ,  1.2486431439348504,
        1.2486431439348418,  1.2476859898995734,  1.2241767141692852,  1.2113757511204395,  1.2113757511204468,  1.1827079945939465,
        1.1549605288552638,  1.1490311918323175,  1.149031191832302 ,  1.2395745297781653,  1.701244043773008 ,  1.9287106246708434,
        1.9287106246708527,  2.5018365778986773,  3.317151710219753 ,  3.5811193311412985,  3.581119331141287 ,  3.913122377060001 ,
        3.4658666887746157,  3.1055953552304087,  3.105595355230407 ,  1.2148757331766002, -4.498045868002808 , -7.056063024905327 ])

var_alpha_10K = np.array([0.3621483329982609, 0.0959891972061549, 0.0645999023198681, 0.0404996272502529, 0.0404996272502529, 0.0299572881740925, 0.0177053518269535,
       0.0083881406692961, 0.0083881406692961, 0.0103623678689945, 0.0040002748949072, 0.00517616619071  , 0.00517616619071  , 0.0296537518637202,
       0.0238474240371561, 0.0137625230561973, 0.013762523056197 , 0.0095012057907632, 0.0079203162218128, 0.0091406869527285, 0.0091406869527284,
       0.021084003096028 , 0.0099103255229292, 0.0048413001297377, 0.0048413001297377, 0.013935918837637 , 0.0163385484898063, 0.0099094900877827,
       0.0099094900877826, 0.0013502477543114, 0.0003118137111574, 0.0002729539422236, 0.0002729539422236, 0.0003587571339765, 0.0003564466382639,
       0.000405478768305 , 0.0004054787683049, 0.0007147601590838, 0.0006044434843791, 0.0005948526419855, 0.0005948526419855, 0.0008789810528989,
       0.001229240635557 , 0.0018913754049372, 0.0018913754049372, 0.0046516037893642, 0.0121349789757007, 0.0179776971935193, 0.0179776971935193,
       0.0230748185485437, 0.0203973723494963, 0.0489496240210475, 0.0489496240210478, 0.1201284650273272, 0.0526712602043189, 0.0920716719797885,
       0.0920716719797887, 0.5075167956635765, 1.8288522503145603, 2.5048492133268137])

time_series = np.array([  0.        ,   7.65193556,  18.21004486,  21.55165035,  21.55165035,  29.20358591,  39.76169521,  43.1033007 ,  43.1033007 ,  50.75523626,
        61.31334556,  64.65495105,  64.65495105,  72.30688661,  82.86499591,  86.2066014 ,  86.2066014 ,  93.85853696, 104.41664626, 107.75825175,
       107.75825175, 115.41018731, 125.96829661, 129.3099021 , 129.3099021 , 136.96183766, 147.51994695, 150.86155245, 150.86155245, 158.51348801,
       169.0715973 , 172.4132028 , 172.4132028 , 180.06513836, 190.62324765, 193.96485315, 193.96485315, 201.61678871, 212.174898  , 215.5165035 ,
       215.5165035 , 223.16843906, 233.72654835, 237.06815385, 237.06815385, 244.72008941, 255.2781987 , 258.6198042 , 258.6198042 , 266.27173976,
       276.82984905, 280.17145455, 280.17145455, 287.82339011, 298.3814994 , 301.7231049 , 301.7231049 , 309.37504046, 319.93314975, 323.27475524])

if __name__ == '__main__':

    mean_altitude = mean_altitude_10K
    var_altitude = var_altitude_10K
    mean_alpha = mean_alpha_10K
    var_alpha = var_alpha_10K
    # Compute the standard deviations
    std_dev_altitude = np.sqrt(var_altitude)
    std_dev_alpha = np.sqrt(var_alpha)

    positive_dev_alt = mean_altitude + 2*std_dev_altitude
    negative_dev_alt = mean_altitude - 2*std_dev_altitude

    positive_dev_alpha = mean_alpha + 2*std_dev_alpha
    negative_dev_alpha = mean_alpha - 2*std_dev_alpha

    non_dimensional_time_series = time_series / time_series[-1]

    # # Plot only the altitude history
    # fname = 'altitude_history_mc.png'
    # matplotlib.rcParams['mathtext.fontset'] = 'cm'
    # fig = plt.figure('altitude', figsize=(7,7))
    # ax = plt.axes()
    # ax.fill_between(time_series, positive_dev_alt, negative_dev_alt)
    # p1 = ax.plot(time_series, mean_altitude, color='k', label='mean')
    # p2 = ax.plot(time_series, positive_dev_alt, '--', color='g', label='2 standard deviations')
    # p3 = ax.plot(time_series, negative_dev_alt, '--', color='g')
    # ax.set_xlabel('Time (s)')
    # ax.set_ylabel('Altitude (m)')
    # ax.legend()
    # plt.tight_layout()
    # # plt.show()
    # plt.savefig(fname, format='png')


    # Subplot will show the altitude first followed by the angle of attack
    matplotlib.rcParams.update({'font.size': 18})
    fname = 'trajectory_schedule_mc.pdf'
    matplotlib.rcParams['mathtext.fontset'] = 'cm'
    fig, axes = plt.subplots(nrows=2, figsize=(13,10))
    axes[0].fill_between(non_dimensional_time_series, positive_dev_alt, negative_dev_alt)
    p1 = axes[0].plot(non_dimensional_time_series, mean_altitude, color='k', label='mean')
    p2 = axes[0].plot(non_dimensional_time_series, positive_dev_alt, '--', color='g', label='$2\sigma$')
    p3 = axes[0].plot(non_dimensional_time_series, negative_dev_alt, '--', color='g')
    axes[0].set_ylabel(r'altitude $(m)$')
    axes[0].legend()
    axes[0].set_xticks(np.arange(1.1, step=0.1))
    plt.tight_layout()
    p4 = axes[1].plot(non_dimensional_time_series, mean_alpha, color='k', label='mean')
    p5 = axes[1].plot(non_dimensional_time_series, positive_dev_alpha, '--', color='g', label='$2\sigma$')
    p6 = axes[1].plot(non_dimensional_time_series, negative_dev_alpha, '--', color='g')
    axes[1].set_ylabel(r'angle of attack, $\alpha$ $(^{\circ})$')
    axes[1].fill_between(non_dimensional_time_series, positive_dev_alpha, negative_dev_alpha)
    axes[1].legend()
    axes[1].set_xlabel(r'normalized time')
    plt.xticks(np.arange(1.1, step=0.1))
    plt.tight_layout()
    # plt.grid(True)
    # plt.show()
    plt.savefig(fname, format='pdf')
